{"remainingRequest":"D:\\Program Files\\project\\jeethink-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files\\project\\jeethink-ui\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files\\project\\jeethink-ui\\src\\components\\ThemePicker\\index.vue","mtime":1631165248875},{"path":"D:\\Program Files\\project\\jeethink-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631165235945},{"path":"D:\\Program Files\\project\\jeethink-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1631165234881},{"path":"D:\\Program Files\\project\\jeethink-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631165235945},{"path":"D:\\Program Files\\project\\jeethink-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1631165247819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpjb25zdCB2ZXJzaW9uID0gcmVxdWlyZSgnZWxlbWVudC11aS9wYWNrYWdlLmpzb24nKS52ZXJzaW9uIC8vIGVsZW1lbnQtdWkgdmVyc2lvbiBmcm9tIG5vZGVfbW9kdWxlcw0KY29uc3QgT1JJR0lOQUxfVEhFTUUgPSAnIzQwOUVGRicgLy8gZGVmYXVsdCBjb2xvcg0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNoYWxrOiAnJywgLy8gY29udGVudCBvZiB0aGVtZS1jaGFsayBjc3MNCiAgICAgIHRoZW1lOiAnJw0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBkZWZhdWx0VGhlbWUoKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MudGhlbWUNCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgZGVmYXVsdFRoZW1lOiB7DQogICAgICBoYW5kbGVyOiBmdW5jdGlvbih2YWwsIG9sZFZhbCkgew0KICAgICAgICB0aGlzLnRoZW1lID0gdmFsDQogICAgICB9LA0KICAgICAgaW1tZWRpYXRlOiB0cnVlDQogICAgfSwNCiAgICBhc3luYyB0aGVtZSh2YWwpIHsNCiAgICAgIGNvbnN0IG9sZFZhbCA9IHRoaXMuY2hhbGsgPyB0aGlzLnRoZW1lIDogT1JJR0lOQUxfVEhFTUUNCiAgICAgIGlmICh0eXBlb2YgdmFsICE9PSAnc3RyaW5nJykgcmV0dXJuDQogICAgICBjb25zdCB0aGVtZUNsdXN0ZXIgPSB0aGlzLmdldFRoZW1lQ2x1c3Rlcih2YWwucmVwbGFjZSgnIycsICcnKSkNCiAgICAgIGNvbnN0IG9yaWdpbmFsQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKG9sZFZhbC5yZXBsYWNlKCcjJywgJycpKQ0KDQogICAgICBjb25zdCAkbWVzc2FnZSA9IHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICBtZXNzYWdlOiAnICBDb21waWxpbmcgdGhlIHRoZW1lJywNCiAgICAgICAgY3VzdG9tQ2xhc3M6ICd0aGVtZS1tZXNzYWdlJywNCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLA0KICAgICAgICBkdXJhdGlvbjogMCwNCiAgICAgICAgaWNvbkNsYXNzOiAnZWwtaWNvbi1sb2FkaW5nJw0KICAgICAgfSkNCg0KICAgICAgY29uc3QgZ2V0SGFuZGxlciA9ICh2YXJpYWJsZSwgaWQpID0+IHsNCiAgICAgICAgcmV0dXJuICgpID0+IHsNCiAgICAgICAgICBjb25zdCBvcmlnaW5hbENsdXN0ZXIgPSB0aGlzLmdldFRoZW1lQ2x1c3RlcihPUklHSU5BTF9USEVNRS5yZXBsYWNlKCcjJywgJycpKQ0KICAgICAgICAgIGNvbnN0IG5ld1N0eWxlID0gdGhpcy51cGRhdGVTdHlsZSh0aGlzW3ZhcmlhYmxlXSwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpDQoNCiAgICAgICAgICBsZXQgc3R5bGVUYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkNCiAgICAgICAgICBpZiAoIXN0eWxlVGFnKSB7DQogICAgICAgICAgICBzdHlsZVRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJykNCiAgICAgICAgICAgIHN0eWxlVGFnLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCkNCiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpDQogICAgICAgICAgfQ0KICAgICAgICAgIHN0eWxlVGFnLmlubmVyVGV4dCA9IG5ld1N0eWxlDQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgaWYgKCF0aGlzLmNoYWxrKSB7DQogICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL3VucGtnLmNvbS9lbGVtZW50LXVpQCR7dmVyc2lvbn0vbGliL3RoZW1lLWNoYWxrL2luZGV4LmNzc2ANCiAgICAgICAgYXdhaXQgdGhpcy5nZXRDU1NTdHJpbmcodXJsLCAnY2hhbGsnKQ0KICAgICAgfQ0KDQogICAgICBjb25zdCBjaGFsa0hhbmRsZXIgPSBnZXRIYW5kbGVyKCdjaGFsaycsICdjaGFsay1zdHlsZScpDQoNCiAgICAgIGNoYWxrSGFuZGxlcigpDQoNCiAgICAgIGNvbnN0IHN0eWxlcyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGUnKSkNCiAgICAgICAgLmZpbHRlcihzdHlsZSA9PiB7DQogICAgICAgICAgY29uc3QgdGV4dCA9IHN0eWxlLmlubmVyVGV4dA0KICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKG9sZFZhbCwgJ2knKS50ZXN0KHRleHQpICYmICEvQ2hhbGsgVmFyaWFibGVzLy50ZXN0KHRleHQpDQogICAgICAgIH0pDQogICAgICBzdHlsZXMuZm9yRWFjaChzdHlsZSA9PiB7DQogICAgICAgIGNvbnN0IHsgaW5uZXJUZXh0IH0gPSBzdHlsZQ0KICAgICAgICBpZiAodHlwZW9mIGlubmVyVGV4dCAhPT0gJ3N0cmluZycpIHJldHVybg0KICAgICAgICBzdHlsZS5pbm5lclRleHQgPSB0aGlzLnVwZGF0ZVN0eWxlKGlubmVyVGV4dCwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpDQogICAgICB9KQ0KDQogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWwpDQoNCiAgICAgICRtZXNzYWdlLmNsb3NlKCkNCiAgICB9DQogIH0sDQoNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZVN0eWxlKHN0eWxlLCBvbGRDbHVzdGVyLCBuZXdDbHVzdGVyKSB7DQogICAgICBsZXQgbmV3U3R5bGUgPSBzdHlsZQ0KICAgICAgb2xkQ2x1c3Rlci5mb3JFYWNoKChjb2xvciwgaW5kZXgpID0+IHsNCiAgICAgICAgbmV3U3R5bGUgPSBuZXdTdHlsZS5yZXBsYWNlKG5ldyBSZWdFeHAoY29sb3IsICdpZycpLCBuZXdDbHVzdGVyW2luZGV4XSkNCiAgICAgIH0pDQogICAgICByZXR1cm4gbmV3U3R5bGUNCiAgICB9LA0KDQogICAgZ2V0Q1NTU3RyaW5nKHVybCwgdmFyaWFibGUpIHsNCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsNCiAgICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCkNCiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHsNCiAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQgJiYgeGhyLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICB0aGlzW3ZhcmlhYmxlXSA9IHhoci5yZXNwb25zZVRleHQucmVwbGFjZSgvQGZvbnQtZmFjZXtbXn1dK30vLCAnJykNCiAgICAgICAgICAgIHJlc29sdmUoKQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICB4aHIub3BlbignR0VUJywgdXJsKQ0KICAgICAgICB4aHIuc2VuZCgpDQogICAgICB9KQ0KICAgIH0sDQoNCiAgICBnZXRUaGVtZUNsdXN0ZXIodGhlbWUpIHsNCiAgICAgIGNvbnN0IHRpbnRDb2xvciA9IChjb2xvciwgdGludCkgPT4gew0KICAgICAgICBsZXQgcmVkID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMCwgMiksIDE2KQ0KICAgICAgICBsZXQgZ3JlZW4gPSBwYXJzZUludChjb2xvci5zbGljZSgyLCA0KSwgMTYpDQogICAgICAgIGxldCBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KQ0KDQogICAgICAgIGlmICh0aW50ID09PSAwKSB7IC8vIHdoZW4gcHJpbWFyeSBjb2xvciBpcyBpbiBpdHMgcmdiIHNwYWNlDQogICAgICAgICAgcmV0dXJuIFtyZWQsIGdyZWVuLCBibHVlXS5qb2luKCcsJykNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICByZWQgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIHJlZCkpDQogICAgICAgICAgZ3JlZW4gKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGdyZWVuKSkNCiAgICAgICAgICBibHVlICs9IE1hdGgucm91bmQodGludCAqICgyNTUgLSBibHVlKSkNCg0KICAgICAgICAgIHJlZCA9IHJlZC50b1N0cmluZygxNikNCiAgICAgICAgICBncmVlbiA9IGdyZWVuLnRvU3RyaW5nKDE2KQ0KICAgICAgICAgIGJsdWUgPSBibHVlLnRvU3RyaW5nKDE2KQ0KDQogICAgICAgICAgcmV0dXJuIGAjJHtyZWR9JHtncmVlbn0ke2JsdWV9YA0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGNvbnN0IHNoYWRlQ29sb3IgPSAoY29sb3IsIHNoYWRlKSA9PiB7DQogICAgICAgIGxldCByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpDQogICAgICAgIGxldCBncmVlbiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDIsIDQpLCAxNikNCiAgICAgICAgbGV0IGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpDQoNCiAgICAgICAgcmVkID0gTWF0aC5yb3VuZCgoMSAtIHNoYWRlKSAqIHJlZCkNCiAgICAgICAgZ3JlZW4gPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogZ3JlZW4pDQogICAgICAgIGJsdWUgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogYmx1ZSkNCg0KICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpDQogICAgICAgIGdyZWVuID0gZ3JlZW4udG9TdHJpbmcoMTYpDQogICAgICAgIGJsdWUgPSBibHVlLnRvU3RyaW5nKDE2KQ0KDQogICAgICAgIHJldHVybiBgIyR7cmVkfSR7Z3JlZW59JHtibHVlfWANCiAgICAgIH0NCg0KICAgICAgY29uc3QgY2x1c3RlcnMgPSBbdGhlbWVdDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSA5OyBpKyspIHsNCiAgICAgICAgY2x1c3RlcnMucHVzaCh0aW50Q29sb3IodGhlbWUsIE51bWJlcigoaSAvIDEwKS50b0ZpeGVkKDIpKSkpDQogICAgICB9DQogICAgICBjbHVzdGVycy5wdXNoKHNoYWRlQ29sb3IodGhlbWUsIDAuMSkpDQogICAgICByZXR1cm4gY2x1c3RlcnMNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ThemePicker","sourcesContent":["<template>\r\n  <el-color-picker\r\n    v-model=\"theme\"\r\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\r\n    class=\"theme-picker\"\r\n    popper-class=\"theme-picker-dropdown\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\r\nconst ORIGINAL_THEME = '#409EFF' // default color\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chalk: '', // content of theme-chalk css\r\n      theme: ''\r\n    }\r\n  },\r\n  computed: {\r\n    defaultTheme() {\r\n      return this.$store.state.settings.theme\r\n    }\r\n  },\r\n  watch: {\r\n    defaultTheme: {\r\n      handler: function(val, oldVal) {\r\n        this.theme = val\r\n      },\r\n      immediate: true\r\n    },\r\n    async theme(val) {\r\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\r\n      if (typeof val !== 'string') return\r\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\r\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n\r\n      const $message = this.$message({\r\n        message: '  Compiling the theme',\r\n        customClass: 'theme-message',\r\n        type: 'success',\r\n        duration: 0,\r\n        iconClass: 'el-icon-loading'\r\n      })\r\n\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n\r\n          let styleTag = document.getElementById(id)\r\n          if (!styleTag) {\r\n            styleTag = document.createElement('style')\r\n            styleTag.setAttribute('id', id)\r\n            document.head.appendChild(styleTag)\r\n          }\r\n          styleTag.innerText = newStyle\r\n        }\r\n      }\r\n\r\n      if (!this.chalk) {\r\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\r\n        await this.getCSSString(url, 'chalk')\r\n      }\r\n\r\n      const chalkHandler = getHandler('chalk', 'chalk-style')\r\n\r\n      chalkHandler()\r\n\r\n      const styles = [].slice.call(document.querySelectorAll('style'))\r\n        .filter(style => {\r\n          const text = style.innerText\r\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n        })\r\n      styles.forEach(style => {\r\n        const { innerText } = style\r\n        if (typeof innerText !== 'string') return\r\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n      })\r\n\r\n      this.$emit('change', val)\r\n\r\n      $message.close()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n      })\r\n      return newStyle\r\n    },\r\n\r\n    getCSSString(url, variable) {\r\n      return new Promise(resolve => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n            resolve()\r\n          }\r\n        }\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n      })\r\n    },\r\n\r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        if (tint === 0) { // when primary color is in its rgb space\r\n          return [red, green, blue].join(',')\r\n        } else {\r\n          red += Math.round(tint * (255 - red))\r\n          green += Math.round(tint * (255 - green))\r\n          blue += Math.round(tint * (255 - blue))\r\n\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n\r\n          return `#${red}${green}${blue}`\r\n        }\r\n      }\r\n\r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        red = Math.round((1 - shade) * red)\r\n        green = Math.round((1 - shade) * green)\r\n        blue = Math.round((1 - shade) * blue)\r\n\r\n        red = red.toString(16)\r\n        green = green.toString(16)\r\n        blue = blue.toString(16)\r\n\r\n        return `#${red}${green}${blue}`\r\n      }\r\n\r\n      const clusters = [theme]\r\n      for (let i = 0; i <= 9; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1))\r\n      return clusters\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.theme-message,\r\n.theme-picker-dropdown {\r\n  z-index: 99999 !important;\r\n}\r\n\r\n.theme-picker .el-color-picker__trigger {\r\n  height: 26px !important;\r\n  width: 26px !important;\r\n  padding: 2px;\r\n}\r\n\r\n.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n  display: none;\r\n}\r\n</style>\r\n"]}]}