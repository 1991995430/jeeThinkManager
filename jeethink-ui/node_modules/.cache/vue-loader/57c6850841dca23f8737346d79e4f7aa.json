{"remainingRequest":"E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\src\\views\\dashboard\\PanelGroup.vue?vue&type=template&id=0333a520&scoped=true&","dependencies":[{"path":"E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\src\\views\\dashboard\\PanelGroup.vue","mtime":1613979786229},{"path":"E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\jeethink快速开发框架（前后分离 多模块）_V3.5\\jeethink快速开发框架（JeeThink-Vue）_V3.5\\jeethink-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImVsLXJvdyIsCiAgICB7IHN0YXRpY0NsYXNzOiAicGFuZWwtZ3JvdXAiLCBhdHRyczogeyBndXR0ZXI6IDQwIH0gfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImVsLWNvbCIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtY29sIiwgYXR0cnM6IHsgeHM6IDEyLCBzbTogMTIsIGxnOiA2IH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwiLAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlU2V0TGluZUNoYXJ0RGF0YSgibmV3VmlzaXRpcyIpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLXBlb3BsZSIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInN2Zy1pY29uIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiaWNvbi1jbGFzcyI6ICJwZW9wbGVzIiwKICAgICAgICAgICAgICAgICAgICAgICJjbGFzcy1uYW1lIjogImNhcmQtcGFuZWwtaWNvbiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIOiuv+WuoiAiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImNvdW50LXRvIiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1udW0iLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJzdGFydC12YWwiOiAwLCAiZW5kLXZhbCI6IDEwMjQwMCwgZHVyYXRpb246IDI2MDAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJlbC1jb2wiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWNvbCIsIGF0dHJzOiB7IHhzOiAxMiwgc206IDEyLCBsZzogNiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsIiwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZVNldExpbmVDaGFydERhdGEoIm1lc3NhZ2VzIikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tbWVzc2FnZSIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInN2Zy1pY29uIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiaWNvbi1jbGFzcyI6ICJtZXNzYWdlIiwKICAgICAgICAgICAgICAgICAgICAgICJjbGFzcy1uYW1lIjogImNhcmQtcGFuZWwtaWNvbiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIOa2iOaBryAiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImNvdW50LXRvIiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1udW0iLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJzdGFydC12YWwiOiAwLCAiZW5kLXZhbCI6IDgxMjEyLCBkdXJhdGlvbjogMzAwMCB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImVsLWNvbCIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtY29sIiwgYXR0cnM6IHsgeHM6IDEyLCBzbTogMTIsIGxnOiA2IH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwiLAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlU2V0TGluZUNoYXJ0RGF0YSgicHVyY2hhc2VzIikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tbW9uZXkiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJzdmctaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgImljb24tY2xhc3MiOiAibW9uZXkiLAogICAgICAgICAgICAgICAgICAgICAgImNsYXNzLW5hbWUiOiAiY2FyZC1wYW5lbC1pY29uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtZGVzY3JpcHRpb24iIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIg6YeR6aKdICIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiY291bnQtdG8iLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLW51bSIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgInN0YXJ0LXZhbCI6IDAsICJlbmQtdmFsIjogOTI4MCwgZHVyYXRpb246IDMyMDAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJlbC1jb2wiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWNvbCIsIGF0dHJzOiB7IHhzOiAxMiwgc206IDEyLCBsZzogNiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsIiwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZVNldExpbmVDaGFydERhdGEoInNob3BwaW5ncyIpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLXNob3BwaW5nIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygic3ZnLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICJpY29uLWNsYXNzIjogInNob3BwaW5nIiwKICAgICAgICAgICAgICAgICAgICAgICJjbGFzcy1uYW1lIjogImNhcmQtcGFuZWwtaWNvbiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIOiuouWNlSAiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImNvdW50LXRvIiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1udW0iLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJzdGFydC12YWwiOiAwLCAiZW5kLXZhbCI6IDEzNjAwLCBkdXJhdGlvbjogMzYwMCB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0KICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}