package com.jeethink.system.service.test;

import org.apache.poi.hpsf.Decimal;

import java.math.BigDecimal;
import java.util.*;
import java.util.stream.Collectors;

import static com.jeethink.system.service.test.DateHelper.getLongDate;
import static com.jeethink.system.service.test.DateHelper.nowDate;

public class Test1025 {

    public static void main(String[] args) {

        List<AppBillProcessDto> list = new ArrayList<>();

        list.add(new AppBillProcessDto("aa", "bb", "aaa", "aaa", "12345", null));
        list.add(new AppBillProcessDto("aa", "bb", "aaa", "aaa", "12345", null));
        list.add(new AppBillProcessDto("aa", "bb", "aaa", "aaa", "12345", null));
        list.add(new AppBillProcessDto("aa", "bb", "aaa", "aaa", "12345", null));

        String[] aa = {"110003", "110005", "120007", "120008", "120009", "120010", "120011", "120050", "120057", "120098", "120101", "120102", "120102", "120103", "120103", "120105", "120106", "120107", "120108", "120109", "120111", "120112", "120113", "120115", "120115", "120121", "120169", "130004", "140001", "140002", "140003", "140004", "140005", "140006", "140007", "140008", "140010", "140011", "140012", "140013", "140017", "140019", "140019", "140020", "140021", "140022", "140023", "140024", "140025", "140026", "140027", "140028", "140029", "140030", "140031", "140085", "140086", "140087", "140088", "140090", "140091", "140092", "140093", "140094", "140095", "140096", "140097", "140098", "140100", "150017", "150018", "150019", "150023", "150024", "150025", "150026", "150027", "150034", "150035", "150036", "150037", "150038", "150044", "150047", "150051", "150052", "150053", "150054", "150055", "150057", "150058", "150059", "150061", "150062", "150063", "150064", "150066", "150068", "150070", "150071", "150072", "150073", "150074", "150082", "150083", "150084", "150085", "150086", "150087", "150088", "150089", "150090", "150091", "150092", "150093", "150094", "150095", "150096", "150097", "150098", "150099", "150100", "150101", "150102", "150103", "150107", "150108", "150109", "150113", "150114", "150115", "150120", "150121", "150122", "150190", "150191", "150192", "150193", "150194", "150195", "150213", "150214", "150215", "150216", "150217", "150219", "150220", "150226", "150227", "150233", "150234", "150235", "150236", "150237", "150238", "150239", "150241", "150337", "150338", "150410", "150411", "150412", "150413", "150414", "150415", "150416", "150417", "150418", "150419", "150420", "150421", "150422", "150423", "150424", "150425", "150426", "150427", "150428", "150429", "150430", "150431", "150432", "150433", "150434", "150435", "150436", "150437", "150438", "150439", "150441", "150442", "150443", "150444", "150445", "150446", "150447", "150448", "150449", "150450", "150451", "150452", "150453", "150454", "150455", "150456", "150457", "150458", "150459", "150460", "150461", "150462", "150463", "150465", "150484", "150485", "150486", "150487", "150488", "150489", "150490", "150491", "150492", "150493", "150494", "150495", "150496", "150497", "150498", "150499", "150500", "150501", "150502", "150503", "150504", "150505", "150506", "150507", "150508", "150509", "150510", "150511", "150513", "150514", "150515", "150516", "150517", "150518", "150519", "150524", "150525", "150527", "150528", "150531", "150534", "150535", "150536", "150537", "150547", "150548", "150553", "150556", "150557", "150558", "150559", "150560", "150561", "150562", "150563", "150566", "150567", "160007", "160008", "160013", "160017", "160044", "160045", "160046", "160051", "160074", "160076", "160077", "160080", "160081", "160082", "160083", "160084", "160085", "160086", "160087", "160088", "160089", "160090", "160091", "160092", "160093", "160094", "160095", "160096", "160097", "160098", "160099", "160100", "160101", "160102", "160103", "160104", "160105", "160106", "160107", "160108", "160112", "160113", "160120", "160121", "160122", "160123", "160124", "160125", "160126", "160127", "160128", "160129", "160130", "160131", "160132", "160133", "160134", "160135", "160136", "160137", "160138", "160139", "160140", "160141", "160142", "160143", "160144", "160145", "160146", "160147", "160148", "160149", "160150", "160151", "160152", "160153", "160154", "160157", "160207", "160209", "160218", "160240", "160279", "160280", "160281", "160282", "160283", "160284", "160285", "160286", "160287", "160288", "160289", "160290", "160291", "160292", "160293", "160294", "160295", "160296", "160297", "160298", "160299", "160300", "160301", "160302", "160303", "160307", "160308", "160309", "160310", "160311", "160312", "160313", "160314", "160315", "160316", "160370", "160371", "160372", "160374", "160379", "160380", "160381", "160382", "160383", "160384", "160385", "160386", "160387", "160388", "160389", "160390", "160391", "160392", "160393", "160394", "160395", "160396", "160397", "160398", "160399", "160412", "160413", "160414", "160415", "160421", "160423", "160426", "160430", "160431", "160432", "160433", "160436", "160437", "160440", "160441", "160442", "160443", "160447", "160449", "160450", "160451", "160452", "160454", "160456", "160462", "160465", "160466", "160468", "160470", "160471", "160472", "160473", "160474", "160475", "160476", "160477", "160478", "160479", "160480", "160482", "160483", "160484", "160485", "160486", "160487", "160488", "160501", "160502", "160503", "160504", "160505", "160506", "160511", "160555", "160558", "160565", "160566", "160567", "160568", "160569", "160571", "160574", "160579", "160580", "160581", "160592", "160593", "160606", "160608", "160611", "160687", "160688", "160689", "160690", "160691", "160692", "160693", "160694", "160695", "160696", "160697", "160698", "160699", "160700", "160701", "160702", "160703", "160704", "160705", "160706", "160707", "160708", "160709", "160710", "160711", "160712", "160713", "160714", "160715", "160716", "160717", "160718", "160719", "160720", "160721", "160722", "160723", "160724", "160725", "160726", "160727", "160728", "160729", "160730", "160731", "160732", "160733", "160734", "160735", "160736", "160737", "160738", "160739", "160740", "160741", "160742", "160743", "160744", "160745", "160746", "160747", "160748", "160749", "160750", "160751", "160752", "160753", "160754", "160755", "160756", "160757", "160758", "160759", "160760", "160761", "160762", "160763", "160764", "160765", "160766", "160767", "160768", "160769", "160770", "160771", "160772", "160773", "160774", "160776", "160778", "160779", "160786", "160787", "160788", "160792", "160794", "160795", "160796", "160799", "160800", "160801", "160802", "160803", "160826", "160827", "160828", "160831", "160832", "160834", "160838", "160840", "160842", "160844", "160846", "160847", "160848", "160849", "160850", "160854", "160857", "160860", "160864", "160865", "160867", "160868", "160871", "160873", "160874", "160876", "160878", "160885", "160886", "160888", "160890", "160996", "161097", "161099", "161102", "161103", "161105", "161107", "161108", "161111", "161112", "161113", "161114", "161118", "161119", "161120", "161121", "161122", "161123", "161124", "161125", "161126", "161127", "161128", "161129", "161132", "161133", "161134", "161136", "161139", "161140", "161141", "161162", "161164", "161165", "161169", "161170", "161185", "161187", "161188", "161189", "161190", "161191", "161192", "161193", "161195", "161230", "161231", "161232", "161233", "161234", "161235", "161236", "161237", "161238", "161239", "161240", "161241", "161242", "161243", "161244", "161245", "161246", "161247", "161248", "161249", "161254", "161256", "161258", "161259", "161261", "161263", "161288", "161289", "161290", "161293", "161294", "161295", "161298", "161299", "161303", "161304", "161305", "161306", "161307", "161308", "161309", "161310", "161311", "161312", "161317", "161318", "161320", "161322", "161323", "161326", "161327", "161328", "161329", "161330", "161331", "161332", "161333", "161334", "161335", "161336", "161337", "161338", "161339", "161340", "161341", "161342", "161345", "161346", "161348", "161349", "161350", "161352", "161353", "161354", "161355", "161356", "161357", "161358", "161505", "161524", "161535", "161572", "161580", "161717", "161718", "161719", "161720", "161721", "161722", "161738", "161742", "161752", "161769", "161774", "161776", "161777", "161778", "161779", "161780", "161782", "161783", "161784", "161785", "161786", "161787", "161788", "161790", "161791", "161792", "161793", "161794", "161796", "161797", "161798", "161799", "161800", "161801", "161802", "161803", "161804", "161805", "161816", "161817", "161818", "161819", "161820", "161821", "161822", "161823", "161824", "161825", "161836", "161837", "161838", "161839", "161840", "161841", "161842", "161843", "161844", "161845", "161846", "161847", "161848", "161849", "161850", "161853", "161855", "161856", "161857", "161858", "161859", "161860", "161861", "161862", "161867", "161868", "161869", "161870", "161873", "161877", "161878", "161879", "161880", "161883", "161884", "161885", "161886", "161887", "161888", "161889", "161890", "161891", "161892", "161893", "161894", "161897", "161898", "161899", "161900", "161901", "161902", "161903", "161904", "161905", "161906", "161907", "161910", "161911", "161939", "161940", "161941", "161942", "161943", "161944", "161945", "161946", "161947", "161948", "161949", "161950", "161956", "161957", "161959", "161960", "161961", "161962", "161963", "161964", "161967", "161968", "161970", "161971", "161978", "161985", "161991", "161993", "161995", "161996", "161997", "12762126", "12762128", "12762129", "12762238", "12762279", "12762368", "12762369", "12782154", "12782155", "12782156", "12782157", "12782158", "12782187", "12782194", "12782367", "12782368", "12782423", "12782444", "12782456", "12782456", "12782512", "12782512", "12782745", "12782745", "12782756", "12822123", "12822176", "12832219", "12832220", "12832227", "12832228", "12832229", "12832230", "12832240", "12832241", "12832242", "12832245", "12832246", "12832250", "12832299", "12832323", "12832332", "12832391", "12832442", "12832523", "12832526", "12842171", "12842171", "12842222", "12842222", "12842222", "12842222", "12842280", "12842280", "12842291", "12842474", "12842476", "12842491", "12842492", "12842493", "12842495", "12852144", "12852151", "12852158", "12852167", "12852167", "12852167", "12852168", "12852169", "12852169", "12852169", "12852169", "12852171", "12862140", "12882123", "12882124", "12882125", "12882126"};

        Integer[] bb = {120007, 120008, 120009, 120010, 120050, 120057, 120105, 120109, 120115, 120119, 120121, 130004, 140001
                , 140002, 140003, 140004, 140005, 140006, 140007, 140008, 140010, 140011, 140012, 140013, 140018, 140020, 140021, 140022, 140023, 140024, 140025, 140026, 140027, 140028
                , 140029, 140030, 140031, 140085, 140086, 140087, 140088, 140090, 140091, 140092, 140093, 140094, 140095, 140096, 140097, 140098, 140100, 150017, 150018, 150019, 150023
                , 150024, 150025, 150026, 150027, 150035, 150036, 150037, 150044, 150047, 150051, 150052, 150053, 150054, 150055, 150057, 150058, 150059, 150061, 150062, 150063, 150064
                , 150066, 150068, 150070, 150071, 150072, 150073, 150074, 150082, 150083, 150087, 150097, 150098, 150128, 150190, 150191, 150192, 150193, 150194, 150195, 150215, 150216
                , 150219, 150220, 150221, 150233, 150234, 150235, 150236, 150237, 150238, 150239, 150240, 150241, 150260, 150337, 150338, 150410, 150411, 150412, 150413, 150414, 150415
                , 150416, 150417, 150418, 150419, 150420, 150421, 150422, 150423, 150424, 150425, 150426, 150427, 150428, 150429, 150430, 150431, 150432, 150433, 150434, 150435, 150436
                , 150437, 150438, 150439, 150441, 150442, 150443, 150444, 150445, 150446, 150447, 150448, 150449, 150450, 150451, 150452, 150453, 150454, 150455, 150456, 150457, 150458
                , 150459, 150460, 150461, 150462, 150463, 150465, 150481, 150482, 150483, 150484, 150485, 150486, 150487, 150488, 150489, 150490, 150491, 150492, 150493, 150494, 150495
                , 150496, 150497, 150498, 150499, 150500, 150501, 150502, 150503, 150504, 150505, 150506, 150507, 150508, 150509, 150510, 150511, 150513, 150514, 150515, 150516, 150517
                , 150518, 150519, 150524, 150525, 150528, 150547, 150548, 150553, 160007, 160008, 160013, 160017, 160044, 160045, 160046, 160051, 160074, 160076, 160077, 160080, 160081
                , 160082, 160083, 160084, 160085, 160086, 160087, 160088, 160089, 160090, 160091, 160092, 160093, 160094, 160095, 160096, 160097, 160098, 160099, 160100, 160101, 160102
                , 160103, 160104, 160105, 160106, 160107, 160108, 160112, 160113, 160120, 160121, 160122, 160123, 160124, 160125, 160126, 160127, 160128, 160129, 160130, 160131, 160132
                , 160133, 160134, 160135, 160136, 160137, 160138, 160139, 160140, 160141, 160142, 160143, 160144, 160145, 160146, 160147, 160148, 160149, 160150, 160151, 160152, 160153
                , 160154, 160155, 160156, 160157, 160207, 160218, 160240, 160247, 160248, 160249, 160279, 160280, 160281, 160282, 160283, 160284, 160285, 160286, 160287, 160288, 160289
                , 160290, 160291, 160292, 160293, 160294, 160295, 160296, 160297, 160298, 160299, 160300, 160301, 160302, 160303, 160304, 160305, 160306, 160307, 160308, 160309, 160310
                , 160311, 160312, 160313, 160314, 160315, 160316, 160317, 160318, 160319, 160320, 160321, 160322, 160323, 160370, 160371, 160372, 160374, 160376, 160377, 160379, 160380
                , 160381, 160382, 160383, 160384, 160385, 160386, 160387, 160388, 160389, 160390, 160391, 160392, 160393, 160394, 160395, 160396, 160397, 160398, 160399, 160400, 160401
                , 160402, 160403, 160404, 160405, 160412, 160413, 160414, 160415, 160421, 160422, 160423, 160424, 160426, 160430, 160431, 160432, 160433, 160436, 160437, 160440, 160441
                , 160442, 160443, 160447, 160449, 160450, 160451, 160452, 160454, 160455, 160456, 160466, 160470, 160566, 160584, 160778, 160779, 160784, 160786, 160787, 160788, 160789
                , 160790, 160791, 160792, 160793, 160794, 160795, 160796, 160825, 160826, 160827, 160828, 160832, 160848, 160849, 160850, 160851, 160854, 160857, 160864, 160865, 160873
                , 160874, 160876, 160878, 160885, 160886, 160890, 160972, 160973, 160974, 160975, 160976, 160990, 160996, 161016, 161030, 161036, 161037, 161038, 161085, 161097, 161099
                , 161102, 161103, 161105, 161107, 161108, 161111, 161112, 161113, 161114, 161116, 161118, 161119, 161120, 161121, 161122, 161123, 161124, 161125, 161126, 161127, 161128
                , 161129, 161131, 161132, 161133, 161134, 161135, 161136, 161139, 161140, 161141, 161162, 161165, 161170, 161176, 161177, 161185, 161187, 161188, 161189, 161190, 161191
                , 161192, 161193, 161194, 161195, 161232, 161233, 161234, 161235, 161236, 161237, 161238, 161239, 161240, 161241, 161242, 161243, 161244, 161245, 161246, 161247, 161248
                , 161249, 161258, 161259, 161260, 161261, 161262, 161263, 161288, 161289, 161290, 161293, 161294, 161295, 161303, 161304, 161305, 161306, 161307, 161308, 161309, 161310
                , 161311, 161312, 161317, 161318, 161320, 161322, 161323, 161326, 161327, 161328, 161329, 161330, 161331, 161332, 161333, 161334, 161335, 161336, 161337, 161338, 161342
                , 161345, 161346, 161348, 161349, 161350, 161352, 161353, 161354, 161355, 161356, 161357, 161358, 161505, 161524, 161535, 161611, 161717, 161718, 161719, 161720, 161721
                , 161722, 161742, 161753, 161754, 161755, 161767, 161774, 161776, 161777, 161778, 161779, 161780, 161782, 161783, 161784, 161785, 161786, 161787, 161788, 161790, 161791
                , 161792, 161793, 161794, 161796, 161797, 161798, 161799, 161800, 161801, 161802, 161803, 161804, 161805, 161816, 161817, 161818, 161819, 161820, 161821, 161822, 161823
                , 161824, 161825, 161836, 161837, 161838, 161839, 161840, 161841, 161842, 161843, 161844, 161845, 161846, 161847, 161848, 161849, 161850, 161853, 161855, 161856, 161857
                , 161858, 161859, 161860, 161861, 161862, 161867, 161868, 161869, 161870, 161873, 161877, 161878, 161879, 161880, 161883, 161884, 161885, 161886, 161887, 161888, 161889
                , 161890, 161891, 161892, 161893, 161894, 161897, 161898, 161899, 161900, 161901, 161902, 161903, 161904, 161905, 161906, 161907, 161910, 161911, 161913, 161939, 161940
                , 161941, 161942, 161943, 161944, 161945, 161946, 161947, 161948, 161949, 161950, 161956, 161957, 161959, 161960, 161961, 161962, 161963, 161964, 161967, 161968, 161970
                , 161971, 161978, 12762129, 12762238, 12762279, 12762368, 12762369, 12782187, 12782194, 12782547, 12782548, 12822123, 12832299, 12832391, 12832523, 12832526, 12842491
                , 12842492, 12842493, 12852144, 12852171, 12862140, 12882123, 12882124, 12882125, 12882126};


        List<Integer> integers = Arrays.asList(bb);

        System.out.println(integers.size());

        List<Integer> collect = integers.stream().distinct().collect(Collectors.toList());

        // System.out.println(collect.size());

        /*for (Integer a : collect) {
            System.out.println(a);
        }*/

        Map<String, Integer> map = new HashMap<>();
        map.put("1", 23);
        map.put("2", 8888888);
        map.put("3", 6);
        map.put("4", 77777777);
        // System.out.println(map.get("2"));

        /*Thread thread1 = new Thread(() -> {
            for (int i = 0; i < 100; i++) {
                System.out.println(i);
                try {
                    Thread.sleep(10);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });
        thread1.start();*/
        // System.out.println(getNextDate(2));
    }

    /**
     * 获取当前时间点指定几个月后的时间
     *
     * @return
     */
    public static Long getNextDate(int timeSetion) {
        long nextDate = 0L;
        try {
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(nowDate());
            if (timeSetion == TimeSectionE.OverdueInOneMonth.getId()) {
                calendar.set(Calendar.MONTH, calendar.get(Calendar.MONTH) + 1);
                nextDate = getLongDate(calendar.getTime());
            }
            if (timeSetion == TimeSectionE.OverdueInThreeMonth.getId()) {
                calendar.set(Calendar.MONTH, calendar.get(Calendar.MONTH) + 3);
                nextDate = getLongDate(calendar.getTime());
            }
            if (timeSetion == TimeSectionE.OverdueInSixMonth.getId()) {
                calendar.set(Calendar.MONTH, calendar.get(Calendar.MONTH) + 6);
                nextDate = getLongDate(calendar.getTime());
            }
            if (timeSetion == TimeSectionE.OverdueInTwelveMonth.getId()) {
                calendar.set(Calendar.MONTH, calendar.get(Calendar.MONTH) + 12);
                nextDate = getLongDate(calendar.getTime());
            }

            return nextDate;
        } catch (Exception ex) {
            ex.printStackTrace();
            return nextDate;
        }
    }
}
